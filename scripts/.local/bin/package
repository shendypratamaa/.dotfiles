#!/bin/bash

set -e

update() {
	echo "Package Update 🍺..."
	brew update --verbose --force && brew upgrade

	echo "Package Update From Brewfile 🎞️..."
	brew bundle -v --file=~/.config/brewfile/Brewfile

	echo "Package Info 🗓️..."
	brew info
}

info() {
	echo "-----------------------------"
	echo "Package List 📦 ==>"
	brew ls --formulae

	echo "-----------------------------"
	echo "Package Cask 📦 ==>"
	brew ls --casks

	echo "-----------------------------"
	echo "Package Tap 📦 ==>"
	brew tap

	echo "-----------------------------"
	echo "Package Info 📦 ==>"
	brew info
}

bundle() {
	echo "Package Bundle 📦..."
	brew bundle dump --desc --force --file=~/.config/brewfile/Brewfile
	bat ~/.config/brewfile/Brewfile
}

clean() {
	echo "Package Clean 🤖..."
	brew cleanup && brew cleanup --prune=all
	brew autoremove
}

leave() {
	echo "Process Complete! 🌟..."
	exit
}

help() {
	cat <<-_EOF_
		Package Update 0.0.1 📦

		package [command] :
		-a --updateall homebrew | install package from brewfile | brew cleanup | generate brewfile | preview brewfile
		-b --bundle generate brewfile | preview brewfile
		-c --clean unused brew package | remove old version package | remove cache
		-l --list package list | formulae | casks | brew info
		-r --reinstall reinstall all package
		-h --help for help information
		-v --version for version information

		Requirement :
		bat:      cat(clone) syntax highlighting [https://github.com/sharkdp/bat]
		homebrew: package manager
		optional: cat or less
	_EOF_
}

version() {
	cat <<-_EOF_
		Package Update 0.0.1 📦
	_EOF_
}

if [ "$1" == "-a" ] || [ "$1" == "--updateall" ]; then
	update
	clean
	bundle
	leave
elif [ "$1" == "-b" ] || [ "$1" == "--bundle" ]; then
	bundle
	leave
elif [ "$1" == "-c" ] || [ "$1" == "--clean" ]; then
	clean
	leave
elif [ "$1" == "-r" ] || [ "$1" == "--reinstall" ]; then
	echo "Uninstalling Package 🌊..."
	brew list --cask | xargs brew uninstall --force
	brew list | xargs brew uninstall --force
	echo "Uninstall Sucessfully 🌟..."
	update
	clean
	bundle
	leave
elif [ "$1" == "-l" ] || [ "$1" == "--list" ]; then
	info
	exit
elif [ "$1" == "-v" ] || [ "$1" == "--version" ]; then
	version
	exit
elif [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
	help
	exit
elif [ -n "$1" ]; then
	echo "package not found 🙅"
	echo "package -help for information 💁"
	exit
else
	echo "package not found 🙅"
	echo "package -help for information 💁"
fi
