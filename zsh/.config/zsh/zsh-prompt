#!/bin/sh

## autoload vcs and colors
autoload -U vcs_info

# enable only git
zstyle ':vcs_info:*' enable git

# setup a hook that runs before every ptompt.
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
setopt prompt_subst

# add a function to check for untracked files in the directory.
# from https://github.com/zsh-users/zsh/blob/master/Misc/vcs_info-examples
zstyle ':vcs_info:git*+set-message:*' hooks git-untracked
#
+vi-git-untracked(){
    if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
        git status --porcelain | grep '??' &> /dev/null ; then
        # This will show the marker if there are any untracked files in repo.
        # If instead you want to show the marker only if there are untracked
        # files in $PWD, use:
        #[[ -n $(git ls-files --others --exclude-standard) ]] ; then
        hook_com[staged]+='!' # signify new files with a bang
    fi
}

zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:git:*' formats " %B%{$fg[blue]%}[%{$fg[red]%}%m%u%c%{$fg[yellow]%} îœ¥%{$fg[magenta]%} %b%{$fg[blue]%}]"

_get_path() {
    current_path=${PWD/#$HOME/'~'}
    if [ "$current_path" = "~" ]; then
       echo $current_path
    else
       path_parent=${current_path%\/*}
       path_parent_short=`echo $path_parent | sed -r 's|/(..)[^/]*|/\1|g'`
       directory=${current_path##*\/}
       echo "$path_parent_short/$directory"
    fi
}

# format our main prompt for hostname current folder, and permissions.
PROMPT="%B%{$fg[red]%}[%{$fg[magenta]%}S25%{$fg[red]%}ðŸ¤–%{$fg[yellow]%}\$(uname)%{$fg[red]%}] %(?:%{$fg_bold[green]%}âžœ :%{$fg_bold[red]%}âžœ )%{$fg[cyan]%}[\$(_get_path)]%{$reset_color%}"
PROMPT+="\$vcs_info_msg_0_ "
